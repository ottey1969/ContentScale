import { useState } from "react";
import { useMutation, useQueryClient } from "@tanstack/react-query";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { useToast } from "@/hooks/use-toast";
import { apiRequest } from "@/lib/queryClient";
import { isUnauthorizedError } from "@/lib/authUtils";
import { Bot, Loader2, Sparkles, FileText, Newspaper, HelpCircle, Share2 } from "lucide-react";

export default function ContentGenerator() {
  const [topic, setTopic] = useState("");
  const [contentType, setContentType] = useState("blog");
  const { toast } = useToast();
  const queryClient = useQueryClient();

  const generateMutation = useMutation({
    mutationFn: async () => {
      if (!topic.trim()) {
        throw new Error("Please enter a topic or keywords");
      }
      
      const payload = {
        contentType,
        topic: topic.trim(),
        title: "", // Will be generated by AI
        content: "", // Will be generated by AI
        userId: "", // Will be set by backend from auth
      };
      
      console.log('Generating content with payload:', payload);
      return await apiRequest("POST", "/api/content/generate", payload);
    },
    onSuccess: async (response) => {
      const content = await response.json();
      toast({
        title: "Content Generated Successfully!",
        description: `Created "${content.title}" with SEO score: ${content.seoScore}`,
      });
      
      // Clear form
      setTopic("");
      
      // Invalidate relevant queries
      queryClient.invalidateQueries({ queryKey: ["/api/content"] });
      queryClient.invalidateQueries({ queryKey: ["/api/dashboard/stats"] });
      queryClient.invalidateQueries({ queryKey: ["/api/activities"] });
    },
    onError: (error: any) => {
      console.error('Content generation error:', error);
      
      if (isUnauthorizedError(error)) {
        toast({
          title: "Authentication Required",
          description: "Please log in to generate content.",
          variant: "destructive",
        });
        setTimeout(() => {
          window.location.href = "/api/login";
        }, 500);
        return;
      }
      
      // Handle specific error cases
      let errorMessage = error.message || "An unexpected error occurred";
      if (error.status === 402) {
        errorMessage = "Insufficient credits. Please upgrade your plan.";
      } else if (error.status === 429) {
        errorMessage = "Rate limit exceeded. Please try again later.";
      }
      
      toast({
        title: "Content Generation Failed",
        description: errorMessage,
        variant: "destructive",
      });
    },
  });

  const contentTypes = [
    { id: "blog", label: "Blog Post", icon: FileText, color: "text-primary" },
    { id: "article", label: "Article", icon: Newspaper, color: "text-secondary" },
    { id: "faq", label: "FAQ", icon: HelpCircle, color: "text-accent" },
    { id: "social", label: "Social", icon: Share2, color: "text-neural" },
  ];

  return (
    <Card className="bg-surface border-surface-light overflow-hidden">
      <CardHeader className="border-b border-surface-light">
        <CardTitle className="flex items-center space-x-2">
          <Bot className="w-5 h-5 text-primary" />
          <span>AI Content Generation Hub</span>
        </CardTitle>
      </CardHeader>
      
      <CardContent className="p-8 space-y-6">
        {/* Topic Input */}
        <div>
          <Label className="text-sm font-medium text-text-secondary mb-2">Enter Topic or Keywords</Label>
          <div className="relative">
            <input
              type="text"
              placeholder="e.g., Cybersecurity best practices for SMBs"
              value={topic}
              onChange={(e) => setTopic(e.target.value)}
              onKeyDown={(e) => {
                if (e.key === 'Enter' && !generateMutation.isPending && topic.trim()) {
                  generateMutation.mutate();
                }
              }}
              className="w-full px-3 py-2 bg-gray-800 border border-gray-700 rounded-md text-white focus:border-blue-500 focus:outline-none pr-32 placeholder:text-gray-400"
              disabled={generateMutation.isPending}
            />
            <Button 
              size="sm"
              onClick={() => generateMutation.mutate()}
              disabled={generateMutation.isPending || !topic.trim()}
              className="absolute right-1 top-1 bg-primary hover:bg-primary/90 text-white font-medium px-3 py-1.5 shadow-sm border border-primary/20"
              title="Generate AI content from your topic"
            >
              {generateMutation.isPending ? (
                <>
                  <Loader2 className="w-4 h-4 animate-spin mr-1" />
                  <span className="text-xs">Generating</span>
                </>
              ) : (
                <>
                  <Sparkles className="w-4 h-4 mr-1" />
                  <span className="text-xs">Generate</span>
                </>
              )}
            </Button>
          </div>
        </div>
        
        {/* Content Type Selection */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
          {contentTypes.map((type) => (
            <button
              key={type.id}
              onClick={() => setContentType(type.id)}
              className={`p-3 rounded-lg border transition-all text-center ${
                contentType === type.id
                  ? "bg-primary bg-opacity-20 border-primary"
                  : "bg-dark border-surface-light hover:border-primary"
              }`}
            >
              <type.icon className={`w-5 h-5 ${type.color} mb-1`} />
              <div className="text-xs">{type.label}</div>
            </button>
          ))}
        </div>
        
        {/* AI Preview */}
        <div className="bg-dark p-4 rounded-lg">
          <div className="flex items-center space-x-2 mb-3">
            <div className="w-2 h-2 bg-accent rounded-full animate-pulse"></div>
            <span className="text-text-secondary text-sm">AI Preview</span>
          </div>
          <div className="text-white text-sm leading-relaxed max-h-32 overflow-y-auto pr-2" style={{ scrollbarWidth: 'thin', scrollbarColor: '#4B5563 #1F2937' }}>
            {generateMutation.isPending ? (
              <div className="space-y-2">
                <div className="h-4 bg-surface-light rounded animate-pulse"></div>
                <div className="h-4 bg-surface-light rounded animate-pulse w-3/4"></div>
                <div className="h-4 bg-surface-light rounded animate-pulse w-1/2"></div>
              </div>
            ) : topic ? (
              <div className="space-y-3">
                <div>
                  <strong className="text-accent">Title:</strong>
                  <p className="mt-1">"Essential {topic} Practices Every Business Must Implement in 2025"</p>
                </div>
                <div>
                  <strong className="text-secondary">Meta Description:</strong>
                  <p className="mt-1">Discover proven {topic} strategies that protect businesses. Learn implementation steps, costs, and ROI for immediate impact.</p>
                </div>
                <div>
                  <strong className="text-primary">Keywords:</strong>
                  <div className="mt-1 space-y-1">
                    <p><span className="text-primary">{topic}</span>, <span className="text-secondary">{topic} best practices</span>, <span className="text-accent">{topic} guide</span></p>
                    <p><span className="text-neural">{topic} implementation</span>, <span className="text-primary">{topic} strategy</span>, <span className="text-secondary">{topic} checklist</span></p>
                  </div>
                </div>
                <div>
                  <strong className="text-accent">AI Overview Potential:</strong>
                  <p className="mt-1 text-text-secondary">High - This content is optimized for AI search engines and features rich, actionable information that search algorithms prefer.</p>
                </div>
                <div>
                  <strong className="text-primary">SEO Score:</strong>
                  <p className="mt-1 text-text-secondary">Estimated 85/100 - Well-structured with target keywords, meta optimization, and user-focused content.</p>
                </div>
              </div>
            ) : (
              <p className="text-text-secondary italic">Enter a topic to see AI-generated preview...</p>
            )}
          </div>
        </div>
      </CardContent>
    </Card>
  );
}
